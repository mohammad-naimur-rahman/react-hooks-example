[
  {
    "id": 1,
    "hookName": "useState",
    "description": "useState hook is used to save the state of the component, and it is used for local component and the state can be transferred to down level component, and also up level component by difficulty. But the state can not be transferred between sibling components. useContext is a solution for universal state management for React applications.",
    "link": "/useState"
  },
  {
    "id": 2,
    "hookName": "useEffect",
    "description": "bla bla bla",
    "link": "/useEffect"
  },
  {
    "id": 3,
    "hookName": "useContext",
    "description": "bla bla bla",
    "link": "/useContext"
  },
  {
    "id": 4,
    "hookName": "useReducer",
    "description": "bla bla bla",
    "link": "/useReducer"
  },
  {
    "id": 5,
    "hookName": "useContext + useReducer",
    "description": "bla bla bla",
    "link": "/useContext-and-useReducer"
  },
  {
    "id": 6,
    "hookName": "useCallBack",
    "description": "useCallback hook prevent unnecessary rerender of any memoized component",
    "link": "/useCallback"
  },
  {
    "id": 7,
    "hookName": "useMemo",
    "description": "bla bla bla",
    "link": "/useMemo"
  },
  {
    "id": 8,
    "hookName": "useRef",
    "description": "bla bla bla",
    "link": "/useRef"
  },
  {
    "id": 9,
    "hookName": "useImperativeHandle",
    "description": "bla bla bla",
    "link": "/useImperativeHandle"
  },
  {
    "id": 10,
    "hookName": "useLayoutEffect",
    "description": "bla bla bla",
    "link": "/useLayoutEffect"
  },
  {
    "id": 11,
    "hookName": "useDebugValue",
    "description": "bla bla bla",
    "link": "/useDebugValue"
  }
]
